{"ts":1376678659261,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1376678811546,"patch":[[{"diffs":[[1,"def hasher(size):\n    mask = size - 1;\n    def retFunc(point):\n        key = (point[0] + 31 * point[1]) | 0;\n        return (~key if key < 0 else key) & mask;\n    return retFunc"]],"start1":0,"start2":0,"length1":0,"length2":177}]],"length":177,"saved":false}
{"ts":1376679104255,"patch":[[{"diffs":[[0,"  key = "],[1,"(int"],[0,"(point[0"]],"start1":69,"start2":69,"length1":16,"length2":20},{"diffs":[[0,"t[0]"],[1,")"],[0," + 31 * "],[1,"int("],[0,"poin"]],"start1":86,"start2":86,"length1":16,"length2":21},{"diffs":[[0,"[1])"],[1,")"],[0," | 0"],[-1,";"],[0,"\n   "]],"start1":108,"start2":108,"length1":13,"length2":13},{"diffs":[[0,") & mask"],[-1,";"],[0,"\n    ret"]],"start1":158,"start2":158,"length1":17,"length2":16}]],"length":185,"saved":false}
{"ts":1376679204397,"patch":[[{"diffs":[[0," mask = "],[1,"int("],[0,"size"],[1,")"],[0," - 1;\n  "]],"start1":21,"start2":21,"length1":20,"length2":25}]],"length":190,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376679608333,"patch":[[{"diffs":[[1,"import math\n\n"],[0,"def hasher(s"]],"start1":0,"start2":0,"length1":12,"length2":25},{"diffs":[[0,"  return retFunc"],[1,"\n\ndef hashtable(size)\n    size = 1 << math.ceil(Math.log(size) / Math.LN2)"]],"start1":187,"start2":187,"length1":16,"length2":90}]],"length":277,"saved":false}
{"ts":1376680004851,"patch":[[{"diffs":[[-1,"import math"],[1,"from math import ceil, log"],[0,"\n\nde"]],"start1":0,"start2":0,"length1":15,"length2":30},{"diffs":[[0,"le(size)"],[1,":"],[0,"\n    siz"]],"start1":231,"start2":231,"length1":16,"length2":17},{"diffs":[[0," << "],[-1,"math.ceil(Math.log(size) / Math.LN2)"],[1,"ceil(log(size)/log(2))\n    "]],"start1":253,"start2":253,"length1":40,"length2":31}]],"length":284,"saved":false}
{"ts":1376680168904,"patch":[[{"diffs":[[0," = 1 << "],[1,"int("],[0,"ceil(log"]],"start1":249,"start2":249,"length1":16,"length2":20},{"diffs":[[0,"/log(2))"],[1,")"],[0,"\n    "],[1,"table = tuple(map(lambda x:False,range(0,size)))"]],"start1":275,"start2":275,"length1":13,"length2":62}]],"length":337,"saved":false}
{"ts":1376680298257,"patch":[[{"diffs":[[0,",size)))"],[1,"\n    h = hasher(size)\n    r = {}\n    r['size']=size\n    def peak(key):\n        matches = table[h(key)]"]],"start1":329,"start2":329,"length1":8,"length2":110}]],"length":439,"saved":false}
{"ts":1376680332405,"patch":[[{"diffs":[[0,"[h(key)]"],[1,"\n        if matches:\n            i = -1\n            n = len(matches)"]],"start1":431,"start2":431,"length1":8,"length2":76}]],"length":507,"saved":false}
{"ts":1376680575921,"patch":[[{"diffs":[[0,"    "],[-1,"i = -1\n            n = len(matches)"],[1,"for match in matches:\n                if equal(match['key'], key):\n                    return match['values']\n        return None"]],"start1":468,"start2":468,"length1":39,"length2":133}]],"length":601,"saved":false}
{"ts":1376680627666,"patch":[[{"diffs":[[0,"urn None"],[1,"\n    r['peak']=peak\n    \n    \ndef equal(keyA, keyB):\n    return keyA[0] == keyB[0] and keyA[1] == keyB[1]"]],"start1":593,"start2":593,"length1":8,"length2":113}]],"length":706,"saved":false}
{"ts":1376680796851,"patch":[[{"diffs":[[0,"eak\n    "],[-1,"\n    "],[1,"def get(key):\n        index = h(key)\n        matches = table[index]\n        if (matches):\n            for match in matches:\n                if equal(match['key'], key):\n                    return match['values']\n        else:\n            matches = table[index] = []\n        values = []\n        matches.append({'key': key, 'values': values});\n        return values;\n    r['get']=get\n    return r"],[0,"\ndef equ"]],"start1":617,"start2":617,"length1":21,"length2":410}]],"length":1095,"saved":false}
