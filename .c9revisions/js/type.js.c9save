{"ts":1376677626651,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var typeGeometries = {\r\n  LineString: 1,\r\n  MultiLineString: 1,\r\n  MultiPoint: 1,\r\n  MultiPolygon: 1,\r\n  Point: 1,\r\n  Polygon: 1,\r\n  GeometryCollection: 1\r\n};\r\n\r\nvar typeObjects = {\r\n  Feature: 1,\r\n  FeatureCollection: 1\r\n};\r\n\r\nvar typeDefaults = {\r\n\r\n  Feature: function(feature) {\r\n    if (feature.geometry) {\r\n      this.geometry(feature.geometry);\r\n    }\r\n  },\r\n\r\n  FeatureCollection: function(collection) {\r\n    var features = collection.features;\r\n    var i = -1;\r\n    var n = features.length;\r\n    while (++i < n) {\r\n      this.Feature(features[i]);\r\n    }\r\n  },\r\n\r\n  GeometryCollection: function(collection) {\r\n    var geometries = collection.geometries;\r\n    var i = -1;\r\n    var n = geometries.length;\r\n    while (++i < n) {\r\n      this.geometry(geometries[i]);\r\n    }\r\n  },\r\n\r\n  LineString: function(lineString) {\r\n    this.line(lineString.coordinates);\r\n  },\r\n\r\n  MultiLineString: function(multiLineString) {\r\n    var coordinates = multiLineString.coordinates;\r\n    var i = -1;\r\n    var n = coordinates.length;\r\n    while (++i < n) {\r\n      this.line(coordinates[i]);\r\n    }\r\n  },\r\n\r\n  MultiPoint: function(multiPoint) {\r\n    var coordinates = multiPoint.coordinates;\r\n    var i = -1;\r\n    var n = coordinates.length;\r\n    while (++i < n) {\r\n      this.point(coordinates[i]);\r\n    }\r\n  },\r\n\r\n  MultiPolygon: function(multiPolygon) {\r\n    var coordinates = multiPolygon.coordinates;\r\n    var i = -1;\r\n    var n = coordinates.length;\r\n    while (++i < n) {\r\n      this.polygon(coordinates[i]);\r\n    }\r\n  },\r\n\r\n  Point: function(point) {\r\n    this.point(point.coordinates);\r\n  },\r\n\r\n  Polygon: function(polygon) {\r\n    this.polygon(polygon.coordinates);\r\n  },\r\n\r\n  object: function(object) {\r\n    return object == null ? null\r\n        : typeObjects.hasOwnProperty(object.type) ? this[object.type](object)\r\n        : this.geometry(object);\r\n  },\r\n\r\n  geometry: function(geometry) {\r\n    if(geometry != null && typeGeometries.hasOwnProperty(geometry.type)){\r\n      return this[geometry.type](geometry);\r\n    } else {\r\n      return null;\r\n    }\r\n  },\r\n\r\n  point: function() {},\r\n\r\n  line: function(coordinates) {\r\n    var i = -1;\r\n    var n = coordinates.length;\r\n    while (++i < n) {\r\n      this.point(coordinates[i]);\r\n    }\r\n  },\r\n\r\n  polygon: function(coordinates) {\r\n    var i = -1;\r\n    var n = coordinates.length;\r\n    while (++i < n) {\r\n      this.line(coordinates[i]);\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = function(types) {\r\n  for (var type in typeDefaults) {\r\n    if (!(type in types)) {\r\n      types[type] = typeDefaults[type];\r\n    }\r\n  }\r\n  types.defaults = typeDefaults;\r\n  return types;\r\n};"]],"start1":0,"start2":0,"length1":0,"length2":2611}]],"length":2611}
