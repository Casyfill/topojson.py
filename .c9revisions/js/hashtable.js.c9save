{"ts":1376678629907,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var hasher = require(\"./hash\");\n\nmodule.exports = function(size) {\n  var hashtable = new Array(size = 1 << Math.ceil(Math.log(size) / Math.LN2));\n  var hash = hasher(size);\n  return {\n    size: size,\n    peek: function(key) {\n      var matches = hashtable[hash(key)];\n\n      if (matches) {\n        var i = -1;\n        var n = matches.length;\n        var match;\n        while (++i < n) {\n          match = matches[i];\n          if (equal(match.key, key)) {\n            return match.values;\n          }\n        }\n      }\n\n      return null;\n    },\n    get: function(key) {\n      var index = hash(key),\n          matches = hashtable[index];\n\n      if (matches) {\n        var i = -1;\n        var n = matches.length;\n        var match;\n        while (++i < n) {\n          match = matches[i];\n          if (equal(match.key, key)) {\n            return match.values;\n          }\n        }\n      } else {\n        matches = hashtable[index] = [];\n      }\n\n      var values = [];\n      matches.push({key: key, values: values});\n      return values;\n    }\n  };\n};\n\nfunction equal(keyA, keyB) {\n  return keyA[0] === keyB[0] &&\n    keyA[1] === keyB[1];\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1141}]],"length":1141}
